jobs:
- job: RunIntegrationTests
  displayName: 'Run API in Docker and Execute Integration Tests'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: |
      echo "Installing docker-compose"
      sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      sudo chmod +x /usr/local/bin/docker-compose
      docker-compose --version
    displayName: 'Install Docker Compose'

  - script: |
      echo "Building and starting API container using docker-compose"
      docker-compose -f docker-compose.yml up -d --build api
    displayName: 'Build and Start API Container'

  - script: |
      echo "Waiting for API container to be healthy"
      for i in {1..30}; do
        CONTAINER_ID=$(docker-compose -f docker-compose.yml ps -q api)
        echo "Container ID: $CONTAINER_ID"
        STATUS=$(docker inspect --format='{{.State.Health.Status}}' $CONTAINER_ID)
        echo "Health Status: $STATUS"
        if [ "$STATUS" = "healthy" ]; then
          echo "API container is healthy"
          exit 0
        fi
        echo "Waiting for API container health... ($i/30)"
        sleep 10
      done
      echo "API container did not become healthy in time"

      echo "Fetching API container logs for debugging:"
      docker logs $CONTAINER_ID

      exit 1
    displayName: 'Wait for API Container Health'

  - script: |
      echo "Running integration tests"
      dotnet test WMB.Api.IntegrationTests/WMB.Api.IntegrationTests.csproj --configuration Release --no-build
    displayName: 'Run Integration Tests'

  - script: |
      echo "Stopping and removing API container"
      docker-compose -f docker-compose.yml down
    displayName: 'Cleanup Docker Containers'
