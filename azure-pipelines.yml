trigger:
  - '*'

variables:
  - group: SonarCloudSecrets
  - name: buildConfiguration
    value: Release
  - name: coverageOutputPath
    value: '$(Build.SourcesDirectory)/WMB.Api.Tests/TestResults/coverage.opencover.xml'

pool:
  vmImage: windows‑latest

steps:
# ── Tooling ────────────────────────────────────────────────────────────────────
- task: JavaToolInstaller@0
  inputs:
    versionSpec: '17'
    jdkArchitectureOption: x64
    jdkSourceOption: PreInstalled
  displayName: Install Java 17

- task: UseDotNet@2
  inputs:
    packageType: sdk
    version: 8.0.x
  displayName: Install .NET 8 SDK

- pwsh: |
    Write‑Host "##vso[task.prependpath]$env:USERPROFILE\.dotnet\tools"
  displayName: Add dotnet tools to PATH

# ── Restore & Build once (BEFORE tests) ───────────────────────────────────────
- script: dotnet restore OmniStack.sln
  displayName: Restore projects

# ── SonarCloud begin ──────────────────────────────────────────────────────────
- script: dotnet tool install -g dotnet-sonarscanner
  displayName: Install SonarScanner CLI

- script: |
    dotnet sonarscanner begin `
      /k:"Morneb_OmniStack" `
      /o:"morneb" `
      /d:sonar.login="$(SONAR_TOKEN)" `
      /d:sonar.host.url="https://sonarcloud.io" `
      /d:sonar.cs.opencover.reportsPaths="$(coverageOutputPath)" `
      /d:sonar.scm.disabled=true `
      /d:sonar.scanner.skipJreProvisioning=true `
      /d:sonar.exclusions="**/WMB.Api.Tests/**/*,**/k6-tests/**/*,**/*.yml"
  displayName: Sonar Begin
  env:
    SONAR_TOKEN: $(SONAR_TOKEN)

- script: dotnet build OmniStack.sln --configuration $(buildConfiguration)
  displayName: Build solution

# ── Test + coverage ───────────────────────────────────────────────────────────
- script: >
    dotnet test OmniStack.sln
    --configuration $(buildConfiguration)
    --no-build
    /p:CollectCoverage=true
    /p:CoverletOutputFormat=opencover
    /p:CoverletOutput=$(coverageOutputPath)
  displayName: Run tests with coverage

# ── SonarCloud end ────────────────────────────────────────────────────────────
- script: dotnet sonarscanner end /d:sonar.login="$(SONAR_TOKEN)"
  displayName: Sonar End
  env:
    SONAR_TOKEN: $(SONAR_TOKEN)

# ── Publish coverage to the “Code coverage” tab ───────────────────────────────
- task: PublishCodeCoverageResults@2
  displayName: Publish coverage
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(coverageOutputPath)'
    reportDirectory: '$(Build.SourcesDirectory)/WMB.Api.Tests/TestResults'
    failIfCoverageEmpty: true

# ── Stryker ───────────────────────────────────────────────────────────────────
- script: |
    dotnet tool install -g dotnet-stryker
    dotnet stryker --solution ../OmniStack.sln ^
                   --reporter html --reporter progress ^
                   --output StrykerOutput ^
                   --threshold-high 80 --threshold-low 60
  workingDirectory: WMB.Api.Tests
  displayName: Run Stryker mutation tests

# ── Publish the HTML report & light up the “Mutation Report” tab ──────────────
#   👉 task name exactly as shown in the extension docs:
#      https://marketplace.visualstudio.com/items?itemName=stryker-mutator.mutation-report-publisher
- task: PublishMutationReport@1
  displayName: Publish Stryker Mutation Report
  inputs:
    reportPattern: 'WMB.Api.Tests/StrykerOutput/mutation-report.html'
    reportDisplayName: 'Mutation Testing ( Stryker )'

