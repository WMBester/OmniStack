trigger:
  - '*'

variables:
  - group: SonarCloudSecrets
  - name: buildConfiguration
    value: 'Release'
  - name: coverageOutputPath
    value: '$(Build.SourcesDirectory)/WMB.Api.Tests/TestResults/coverage.opencover.xml'

pool:
  vmImage: 'windows-latest'

steps:
# ---------- toolchain ----------
- task: JavaToolInstaller@0
  inputs:
    versionSpec: '17'
    jdkArchitectureOption: 'x64'
  displayName: 'Install Java 17'

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.0.x'
  displayName: 'Install .NET 8 SDK'

- powershell: |
    Write‑Host "##vso[task.prependpath]$env:USERPROFILE\.dotnet\tools"
  displayName: 'Add global‑tools path to PATH'

# ---------- restore + build once ----------
- script: dotnet restore OmniStack.sln
  displayName: 'Restore'

# ---------- SonarCloud ----------
- script: dotnet tool install -g dotnet-sonarscanner
  displayName: 'Install SonarScanner CLI'

- script: >
    dotnet sonarscanner begin
    /k:"Morneb_OmniStack"
    /o:"morneb"
    /d:sonar.login="$(SONAR_TOKEN)"
    /d:sonar.host.url="https://sonarcloud.io"
    /d:sonar.scm.disabled=true
    /d:sonar.scanner.skipJreProvisioning=true
    /d:sonar.cs.opencover.reportsPaths="$(coverageOutputPath)"
    /d:sonar.exclusions="**/WMB.Api.Tests/**/*,**/k6-tests/**/*,**/*.yml"
  displayName: 'SonarCloud ‑ begin'

- script: dotnet build OmniStack.sln --configuration $(buildConfiguration)
  displayName: 'Build (after Sonar begin)'

# ---------- test + coverage ----------
- script: >
    dotnet test OmniStack.sln
    --configuration $(buildConfiguration)
    --no-build
    /p:CollectCoverage=true
    /p:CoverletOutputFormat=opencover
    /p:CoverletOutput=$(coverageOutputPath)
  displayName: 'Run tests & collect coverage'

- script: dotnet sonarscanner end /d:sonar.login="$(SONAR_TOKEN)"
  displayName: 'SonarCloud ‑ end'

- task: PublishCodeCoverageResults@2
  displayName: 'Publish coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(coverageOutputPath)'
    reportDirectory: '$(Build.SourcesDirectory)/WMB.Api.Tests/TestResults'
    failIfCoverageEmpty: true

# ---------- Stryker ----------
- script: |
    dotnet tool install -g dotnet-stryker
    dotnet stryker ^
      --solution ../OmniStack.sln ^
      --reporter html ^
      --reporter progress ^
      --output StrykerOutput ^
      --threshold-high 80 ^
      --threshold-low 60
  workingDirectory: 'WMB.Api.Tests'
  displayName: 'Run mutation tests (Stryker)'

# ---------- publish HTML for the tab ----------
- task: mutationreportpublisher.mutation-report-publisher.publish-mutation-report@1
  displayName: 'Publish Stryker mutation report'
  inputs:
    reportPattern: 'WMB.Api.Tests/StrykerOutput/**/mutation-report.html'   # glob inside output folder
    reportDisplayName: 'Stryker Mutation Report'